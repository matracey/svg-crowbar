{"version":3,"sources":["webpack://svg-crowbar/webpack/universalModuleDefinition","webpack://svg-crowbar/webpack/bootstrap","webpack://svg-crowbar/./src/index.js","webpack://svg-crowbar/./node_modules/d3/d3.js","webpack://svg-crowbar/./src/constants.js","webpack://svg-crowbar/./src/helpers.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_d","_interopRequireDefault","_constants","_helpers","URL","webkitURL","body","document","_setInlineStyles","svg","emptySvgDeclarationComputed","traverseNodes","forEach","e","element","CSSStyleDeclarationComputed","getComputedStyle","length","computedStyleStr","getPropertyValue","Error","tagName","fontSize","fontWeight","fontFamily","getFontFamily","setAttribute","_explicitlySetStyle","download","sourceSvg","filename","arguments","undefined","console","log","id","class","title","replace","toLowerCase","url","createObjectURL","Blob","source","type","a","createElement","appendChild","style","display","click","setTimeout","revokeObjectURL","downloadPNG","canvas","width","height","bBox","getBBox","context","querySelector","getContext","imgsrc","btoa","outerHTML","image","onload","drawImage","canvasdata","toDataURL","pngimg","default","select","html","href","src","createPopover","sources","crowbarElements","querySelectorAll","el","parentNode","removeChild","_cleanup","sourceA","sourceB","Math","abs","top","left","buttonsContainer","position","background","buttonWrapper","scrollTop","scrollLeft","padding","color","cursor","textContent","button","margin","buttonPNG","onclick","documents","SVGSources","iframes","objects","emptySvgElement","createElementNS","prefix","concat","_toConsumableArray","getContentDocuments","doc","newSources","svgInfo","svgs","removeAttribute","hasAttributeNS","xmlns","setAttributeNS","xlink","XMLSerializer","serializeToString","rect","getBoundingClientRect","push","getAttribute","childElementCount","doctype","_getSources","alert","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","version","d3_arraySlice","slice","d3_array","list","d3_document","this","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","array","Array","Date","now","setProperty","error","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","lo","hi","mid","right","ascending","descending","min","f","max","extent","sum","mean","j","quantile","values","H","h","floor","v","median","numbers","sort","variance","deviation","apply","sqrt","d3_bisect","d3_zipLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","random","permute","indexes","permutes","pairs","p1","zip","zips","transpose","matrix","keys","map","entries","merge","arrays","merged","d3_class","ctor","properties","d3_Map","_","range","start","stop","step","Infinity","k","d3_range_integerScale","set","isArray","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","has","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","order","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","event","z","on","listener","indexOf","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","requote","d3_requote_re","d3_subclass","__proto__","d3_selection","groups","d3_selectionPrototype","d3_select","d3_selectAll","d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","selection","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","__data__","selectAll","d3_nsPrefix","xhtml","xml","d3_selection_attr","qualify","removeAttributeNS","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","split","d3_selection_classed","d3_selection_classedName","re","classList","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","namespace","namespaceURI","d3_selectionRemove","parent","d3_selection_dataNode","data","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","attr","getAttributeNS","each","classed","contains","text","innerHTML","append","insert","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","update","enter","exit","datum","filter","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","match","upgroup","j0","d3_selection_enterInsertBefore","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","w","suppressClick","off","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","scrollX","scrollY","ctm","border","getScreenCTM","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","subject","move","end","dragOffset","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","d3_tanh","d3_sinh","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","g","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","q","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","toString","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","row","typedResponse","parse","formatRow","formatValue","join","parseRows","Function","JSON","stringify","eol","EOL","EOF","rows","N","I","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","formatPrefix","precision","d3_format_re","d3_format_types","String","fromCharCode","X","toPrecision","toExponential","toFixed","d3_format_typeDefault","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","offset","dt","times","utc","d3_time_interval_utc","year","day","years","days","dayOfYear","interval","week","sunday","weeks","weekOfYear","sundayOfYear","d3_time_formatPads","-","0","d3_time_numberRe","d3_time_percentRe","d3_time_formatPad","fill","sign","string","d3_time_formatRe","names","d3_time_formatLookup","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberSunday","U","d3_time_parseWeekNumberMonday","W","d3_time_parseFullYear","d3_time_parseYear","d3_time_expandYear","d3_time_parseZone","Z","d3_time_parseMonthNumber","d3_time_parseDay","d3_time_parseDayOfYear","d3_time_parseHour24","d3_time_parseMinutes","M","d3_time_parseSeconds","d3_time_parseMilliseconds","L","d3_time_zone","zs","zh","zm","d3_time_parseLiteralPercent","d3_time_formatMulti","formats","locale","numberFormat","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","specifier","align","zfill","comma","suffix","integer","exponent","zcomma","fullSuffix","negative","unit","after","lastIndexOf","d3_locale_numberFormat","timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","d3_time_formats","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_periodLookup","d3_time_dayRe","d3_time_dayLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","B","mondayOfYear","Y","%","d3_locale_timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","lines","rejoin","d3_geo_clipAntimeridian","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","C","ρ0","forward","ρ0_y","clipExtent","output","valid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBufferCircle","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","projectStream","contextStream","cacheStream","pointRadius","d3_geo_pathProjectStream","pointCircle","pointLineStart","lineEndPolygon","moveTo","lineTo","closePath","transform","methods","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_interpolate","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiCreateBeach","site","beach","d3_geom_voronoiRedBlackNode","edge","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","P","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","visit","d3_geom_quadtreeVisit","sx","sy","children","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","ease","d3_ease_clamp","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","pie","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","silhouette","wiggle","s2","s3","o0","expand","zero","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","createContextualFragment","json","responseXML","fontName","rootNode","hasChildNodes","firstChild","nodeName","nodesToSearch","contentDocument"],"mappings":"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","file":"svg-crowbar.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"svg-crowbar\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"svg-crowbar\"] = factory();\n\telse\n\t\troot[\"svg-crowbar\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import d3 from \"d3\";\n\nimport { prefix, doctype } from \"./constants\";\nimport { getFontFamily, traverseNodes, getContentDocuments } from \"./helpers\";\n\nwindow.URL = (window.URL || window.webkitURL);\n\nconst { body } = document;\n\nconst _cleanup = () => {\n    const crowbarElements = document.querySelectorAll(\".svg-crowbar\");\n\n    [].forEach.call(crowbarElements, el => el.parentNode.removeChild(el));\n};\n\nconst _setInlineStyles = (svg, emptySvgDeclarationComputed) => {\n    const _explicitlySetStyle = (element) => {\n        const CSSStyleDeclarationComputed = getComputedStyle(element);\n        const { length } = CSSStyleDeclarationComputed;\n        let key;\n        let value;\n        const computedStyleStr = \"\";\n\n        for (let i = 0; i < length; i += 1) {\n            key = CSSStyleDeclarationComputed[i];\n            value = CSSStyleDeclarationComputed.getPropertyValue(key);\n            if (value !== emptySvgDeclarationComputed.getPropertyValue(key) && key !== \"font-family\") {\n                computedStyleStr += key + \":\" + value + \";\";\n            }\n        }\n        if (element.tagName === \"text\" || element.tagName === \"tspan\") {\n            computedStyleStr += \"font-size:\" + CSSStyleDeclarationComputed.fontSize + \";\";\n            const fontWeight = CSSStyleDeclarationComputed.fontWeight;\n            const fontFamily = getFontFamily(fontWeight);\n\n            computedStyleStr += \"font-family:\" + fontFamily + \";\";\n        }\n        element.setAttribute(\"style\", computedStyleStr);\n    };\n\n    // hardcode computed css styles inside svg\n    traverseNodes(svg).forEach(e => _explicitlySetStyle(e));\n};\n\nconst _getSources = (doc, emptySvgDeclarationComputed) => {\n    const svgInfo = [],\n        svgs = doc.querySelectorAll(\"svg\");\n\n    [].forEach.call(svgs, (svg) => {\n        svg.setAttribute(\"version\", \"1.1\");\n\n        // removing attributes so they aren't doubled up\n        svg.removeAttribute(\"xmlns\");\n        svg.removeAttribute(\"xlink\");\n\n        // These are needed for the svg\n        if (!svg.hasAttributeNS(prefix.xmlns, \"xmlns\")) {\n            svg.setAttributeNS(prefix.xmlns, \"xmlns\", prefix.svg);\n        }\n\n        if (!svg.hasAttributeNS(prefix.xmlns, \"xmlns:xlink\")) {\n            svg.setAttributeNS(prefix.xmlns, \"xmlns:xlink\", prefix.xlink);\n        }\n\n        _setInlineStyles(svg, emptySvgDeclarationComputed);\n\n        const source = (new XMLSerializer()).serializeToString(svg);\n        const rect = svg.getBoundingClientRect();\n\n        svgInfo.push({\n            top: rect.top,\n            left: rect.left,\n            width: rect.width,\n            height: rect.height,\n            class: svg.getAttribute(\"class\"),\n            id: svg.getAttribute(\"id\"),\n            childElementCount: svg.childElementCount,\n            source: [doctype + source]\n        });\n    });\n    return svgInfo;\n};\n\nexport const download = (sourceSvg, filename = \"untitled\") => {\n    console.log(\"Using Download SVG\");\n\n    if (filename === \"untitled\") {\n        if (sourceSvg.id) {\n            filename = sourceSvg.id;\n        } else if (sourceSvg.class) {\n            filename = sourceSvg.class;\n        } else if (window.document.title) {\n            filename = window.document.title.replace(/[^a-z0-9]/gi, \"-\").toLowerCase();\n        }\n    }\n\n    const url = window.URL.createObjectURL(new Blob(sourceSvg.source, { type: \"text/xml\" }));\n\n    const a = document.createElement(\"a\");\n\n    body.appendChild(a);\n    a.setAttribute(\"class\", \"svg-crowbar\");\n    a.setAttribute(\"download\", filename + \".svg\");\n    a.setAttribute(\"href\", url);\n    a.style.display = \"none\";\n    a.click();\n\n    setTimeout(() => window.URL.revokeObjectURL(url), 10);\n};\n\nexport const downloadPNG = (sourceSvg, filename = \"untitled\") => {\n    console.log(\"Using Download PNG\");\n\n    if (filename === \"untitled\") {\n        if (sourceSvg.id) {\n            filename = sourceSvg.id;\n        } else if (sourceSvg.class) {\n            filename = sourceSvg.class;\n        } else if (window.document.title) {\n            filename = window.document.title.replace(/[^a-z0-9]/gi, \"-\").toLowerCase();\n        }\n    }\n\n    const canvas = document.createElement(\"canvas\");\n    let width = typeof sourceSvg.width === \"number\" ? sourceSvg.width : null;\n    let height = typeof sourceSvg.height === \"number\" ? sourceSvg.height : null;\n\n    if (!width || !height) {\n        const bBox = sourceSvg.getBBox();\n\n        width = bBox.width;\n        height = bBox.height;\n    }\n\n    body.appendChild(canvas);\n    canvas.setAttribute(\"id\", \"svg-image\");\n    canvas.setAttribute(\"width\", width);\n    canvas.setAttribute(\"height\", height);\n    canvas.style.display = \"none\";\n\n    const canvasSvgImage = document.querySelector(\"canvas#svg-image\");\n    const context = canvasSvgImage.getContext(\"2d\");\n    const imgsrc = \"data:image/svg+xml;base64,\" + btoa(sourceSvg.source || sourceSvg.outerHTML);\n    const image = document.createElement(\"img\");\n\n    // This isn't getting called.\n    image.onload = () => {\n        context.drawImage(image, 0, 0);\n        const canvasdata = canvas.toDataURL(\"image/png\");\n\n        const pngimg = '<img src=\"' + canvasdata + '\" width=\"' + sourceSvg.width + '\" height=\"' + sourceSvg.height + '\">';\n\n        d3.select(\"#pngdataurl\").html(pngimg);\n\n        const a = document.createElement(\"a\");\n\n        a.download = filename + \".png\";\n        a.href = canvasdata;\n        document.body.appendChild(a);\n        a.click();\n    };\n    image.src = imgsrc;\n};\n\nexport const createPopover = (sources) => {\n    _cleanup();\n\n    sources.forEach((sourceA) => {\n        sources.forEach((sourceB) => {\n            if (sourceA !== sourceB) {\n                if ((Math.abs(sourceA.top - sourceB.top) < 38) && (Math.abs(sourceA.left - sourceB.left) < 38)) {\n                    sourceB.top += 38;\n                    sourceB.left += 38;\n                }\n            }\n        });\n    });\n\n    const buttonsContainer = document.createElement(\"div\");\n\n    body.appendChild(buttonsContainer);\n\n    buttonsContainer.setAttribute(\"class\", \"svg-crowbar\");\n    buttonsContainer.style[\"z-index\"] = 1e7;\n    buttonsContainer.style.position = \"absolute\";\n    buttonsContainer.style.top = 0;\n    buttonsContainer.style.left = 0;\n\n    const background = document.createElement(\"div\");\n\n    body.appendChild(background);\n\n    background.setAttribute(\"class\", \"svg-crowbar\");\n    background.style.background = \"rgba(255, 255, 255, 0.7)\";\n    background.style.position = \"fixed\";\n    background.style.left = 0;\n    background.style.top = 0;\n    background.style.width = \"100%\";\n    background.style.height = \"100%\";\n\n    sources.forEach((d, i) => {\n        const buttonWrapper = document.createElement(\"div\");\n\n        buttonsContainer.appendChild(buttonWrapper);\n        buttonWrapper.setAttribute(\"class\", \"svg-crowbar\");\n        buttonWrapper.style.position = \"absolute\";\n        buttonWrapper.style.top = (d.top + document.body.scrollTop) + \"px\";\n        buttonWrapper.style.left = (document.body.scrollLeft + d.left) + \"px\";\n        buttonWrapper.style.padding = \"4px\";\n        buttonWrapper.style[\"border-radius\"] = \"3px\";\n        buttonWrapper.style.color = \"white\";\n        buttonWrapper.style[\"text-align\"] = \"center\";\n        buttonWrapper.style[\"font-family\"] = \"'Helvetica Neue'\";\n        buttonWrapper.style.background = \"rgba(0, 0, 0, 0.8)\";\n        buttonWrapper.style[\"box-shadow\"] = \"0px 4px 18px rgba(0, 0, 0, 0.4)\";\n        buttonWrapper.style.cursor = \"move\";\n        buttonWrapper.textContent = \"SVG #\" + i + \": \" + (d.id ? \"#\" + d.id : \"\") + (d.class ? \".\" + d.class : \"\");\n\n        const button = document.createElement(\"button\");\n\n        buttonWrapper.appendChild(button);\n        button.setAttribute(\"data-source-id\", i);\n        button.style.width = \"150px\";\n        button.style[\"font-size\"] = \"12px\";\n        button.style[\"line-height\"] = \"1.4em\";\n        button.style.margin = \"5px 0 0 0\";\n        button.textContent = \"Download SVG\";\n\n        const buttonPNG = document.createElement(\"button\");\n\n        buttonWrapper.appendChild(buttonPNG);\n        buttonPNG.setAttribute(\"data-source-id\", i);\n        buttonPNG.style.width = \"150px\";\n        buttonPNG.style[\"font-size\"] = \"12px\";\n        buttonPNG.style[\"line-height\"] = \"1.4em\";\n        buttonPNG.style.margin = \"5px 0 0 0\";\n        buttonPNG.textContent = \"Download PNG\";\n\n        button.onclick = (el) => {\n            download(d);\n        };\n\n        buttonPNG.onclick = (el) => {\n            downloadPNG(d);\n        };\n    });\n};\n\nexport const initialize = () => {\n    const documents = [window.document];\n    const SVGSources = [];\n    const iframes = document.querySelectorAll(\"iframe\");\n    const objects = document.querySelectorAll(\"object\");\n    // add empty svg element\n    const emptySvgElement = window.document.createElementNS(prefix.svg, \"svg\");\n\n    window.document.body.appendChild(emptySvgElement);\n    const emptySvgDeclarationComputed = getComputedStyle(emptySvgElement);\n\n    documents = [ ...documents, ...getContentDocuments(iframes), ...getContentDocuments(objects) ];\n\n    documents.forEach((doc) => {\n        const newSources = _getSources(doc, emptySvgDeclarationComputed);\n        // because of prototype on NYT pages\n\n        for (const i = 0; i < newSources.length; i += 1) {\n            SVGSources.push(newSources[i]);\n        }\n    });\n    if (SVGSources.length > 1) {\n        createPopover(SVGSources);\n    } else if (SVGSources.length > 0) {\n        download(SVGSources[0]);\n    } else {\n        alert(\"The Crowbar couldn’t find any SVG nodes.\");\n    }\n};\n","!function() {\n  var d3 = {\n    version: \"3.5.12\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();","export const doctype = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">';\nexport const prefix = {\n    xmlns: \"http://www.w3.org/2000/xmlns/\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    svg: \"http://www.w3.org/2000/svg\"\n};\n","/**\n * Determines the fontFamily based on the specified fontWeight.\n *\n * @param {*} fontWeight The fontWeight from which the fontFamily should be determined.\n * @returns The string name of the fontFamily.\n */\nexport const getFontFamily = (fontWeight) => {\n    const fontName = \"NYTFranklin\";\n\n    if (fontWeight === 300 || fontWeight.toLowerCase() === \"light\") {\n        return fontName + \" Light\";\n    }\n    if (fontWeight > 400 || fontWeight.toLowerCase() === \"bold\") {\n        return fontName + \" Bold\";\n    }\n    return fontName + \" Medium\";\n};\n\n/**\n * Loops through all of the nodes on the specified root node and returns an array of the elements.\n *\n * @param {*} rootNode The root node from which to start the traversal.\n * @returns An array of the visited nodes.\n */\nexport const traverseNodes = (rootNode) => {\n    const tree = [];\n\n    tree.push(rootNode);\n\n    const visit = (node) => {\n        if (node && node.hasChildNodes()) {\n            const child = node.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1 && child.nodeName !== \"SCRIPT\") {\n                    tree.push(child);\n                    visit(child);\n                }\n                child = child.nextSibling;\n            }\n        }\n    };\n\n    visit(rootNode);\n    return tree;\n};\n\n/**\n * Loads the contentDocument values from each of the elements in the specified nodesToSearch.\n *\n * @param {*} nodesToSearch The DOM nodes to be searched for contentDocument objects.\n * @returns An array of the found contentDocument objects.\n */\nexport const getContentDocuments = (nodesToSearch) => {\n    return [].map.call(nodesToSearch, (el) => {\n        try {\n            if (el.contentDocument) {\n                return el.contentDocument;\n            }\n        } catch (err) {\n            console.error(err);\n        }\n        return null;\n    });\n};\n"],"sourceRoot":""}